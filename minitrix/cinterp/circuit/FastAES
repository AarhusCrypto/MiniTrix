# This version we use the S-Box from "A depth-16 circui for the AES
#S-Box.

#
# Assembly Interactive MPC AES
# Encrypts 1 blocks. Sends 1 bytes in parallel
# a_i=coefficients of SBox poly
#
# Will need 17280 triples and 0 bit triples
#
# M=Public matrix
#

480 192 16 768
init_heap 6800
CONST a_0 [1 1 0 0 0 1 1]
CONST a_1 [1 1 1 1 0 0 0 1]
CONST a_2 [1 0 1 0 1 1 0 1]
CONST a_3 [1]
CONST a_4 [0 0 1 0 1 1 1 1]
CONST a_5 [1 0 1 0 0 1]
CONST a_6 [1 0 0 1 1 1 1 1]
CONST a_7 [1 0 0 1]
CONST a_8 [1 0 1]

CONST M_0 [0 1]
# M_1 = 0x01
# M_2 = 0x01
CONST M_3 [1 1]
CONST M_4 [1 1]
CONST M_5 [0 1]
# M_6 = 0x01
# M_7 = 0x01
# M_8 = 0x01
CONST M_9 [1 1]
CONST M_10 [0 1]
# M_11 = 0x01
# M_12 = 0x01
# M_13 = 0x01
CONST M_14 [1 1]
CONST M_15 [0 1]


############################################################
CONST zero [ 0 ]

SECRET 0] CONST key_00 [ 0 ]
SECRET 0] CONST key_01 [ 0 ]
SECRET 0] CONST key_02 [ 0 ]
SECRET 0] CONST key_03 [ 0 ]
SECRET 0] CONST key_04 [ 0 ]
SECRET 0] CONST key_05 [ 0 ]
SECRET 0] CONST key_06 [ 0 ]
SECRET 0] CONST key_07 [ 0 ]
SECRET 0] CONST key_08 [ 0 ]
SECRET 0] CONST key_09 [ 0 ]
SECRET 0] CONST key_0A [ 0 ]
SECRET 0] CONST key_0B [ 0 ]
SECRET 0] CONST key_0C [ 0 ]
SECRET 0] CONST key_0D [ 0 ]
SECRET 0] CONST key_0E [ 0 ]
SECRET 0] CONST key_0F [ 0 ]

SECRET 1] CONST key_10 [ 0 ]
SECRET 1] CONST key_11 [ 0 ]
SECRET 1] CONST key_12 [ 0 ]
SECRET 1] CONST key_13 [ 0 ]
SECRET 1] CONST key_14 [ 0 ]
SECRET 1] CONST key_15 [ 0 ]
SECRET 1] CONST key_16 [ 0 ]
SECRET 1] CONST key_17 [ 0 ]
SECRET 1] CONST key_18 [ 0 ]
SECRET 1] CONST key_19 [ 0 ]
SECRET 1] CONST key_1A [ 0 ]
SECRET 1] CONST key_1B [ 0 ]
SECRET 1] CONST key_1C [ 0 ]
SECRET 1] CONST key_1D [ 0 ]
SECRET 1] CONST key_1E [ 0 ]
SECRET 1] CONST key_1F [ 0 ]

# initialise the first 16 entries of the heap (after constant pool) to
# zero.

load 0 zero
load 1 zero
load 2 zero
load 3 zero
load 4 zero
load 5 zero
load 6 zero
load 7 zero
load 8 zero
load 9 zero
load 10 zero
load 11 zero
load 12 zero
load 13 zero
load 14 zero
load 15 zero

# Player one's share is loaded into address 16 through 31
#

load 16 key_00
load 17 key_01
load 18 key_02
load 19 key_03
load 20 key_04
load 21 key_05
load 22 key_06
load 23 key_07
load 24 key_08
load 25 key_09
load 26 key_0A
load 27 key_0B
load 28 key_0C
load 29 key_0D
load 30 key_0E
load 31 key_0F

# Player two's share is added to player one's share given the plain
# key in addresses 16 through 31
 
sadd 16 16 key_10
sadd 17 17 key_11
sadd 18 18 key_12
sadd 19 19 key_13
sadd 20 20 key_14
sadd 21 21 key_15
sadd 22 22 key_16
sadd 23 23 key_17
sadd 24 24 key_18
sadd 25 25 key_19
sadd 26 26 key_1A
sadd 27 27 key_1B
sadd 28 28 key_1C
sadd 29 29 key_1D
sadd 30 30 key_1E
sadd 31 31 key_1F

############################################################

load 32 zero
load 33 zero
load 34 zero
load 35 zero
load 36 zero
load 37 zero
load 38 zero
load 39 zero
load 40 zero
load 41 zero
load 42 zero
load 43 zero
load 44 zero
load 45 zero
load 46 zero
load 47 zero

load 48 zero
load 49 zero
load 50 zero
load 51 zero
load 52 zero
load 53 zero
load 54 zero
load 55 zero
load 56 zero
load 57 zero
load 58 zero
load 59 zero
load 60 zero
load 61 zero
load 62 zero
load 63 zero

load 64 zero
load 65 zero
load 66 zero
load 67 zero
load 68 zero
load 69 zero
load 70 zero
load 71 zero
load 72 zero
load 73 zero
load 74 zero
load 75 zero
load 76 zero
load 77 zero
load 78 zero
load 79 zero

load 80 zero
load 81 zero
load 82 zero
load 83 zero
load 84 zero
load 85 zero
load 86 zero
load 87 zero
load 88 zero
load 89 zero
load 90 zero
load 91 zero
load 92 zero
load 93 zero
load 94 zero
load 95 zero

load 96 zero
load 97 zero
load 98 zero
load 99 zero
load 100 zero
load 101 zero
load 102 zero
load 103 zero
load 104 zero
load 105 zero
load 106 zero
load 107 zero
load 108 zero
load 109 zero
load 110 zero
load 111 zero

load 112 zero
load 113 zero
load 114 zero
load 115 zero
load 116 zero
load 117 zero
load 118 zero
load 119 zero
load 120 zero
load 121 zero
load 122 zero
load 123 zero
load 124 zero
load 125 zero
load 126 zero
load 127 zero

load 128 zero
load 129 zero
load 130 zero
load 131 zero
load 132 zero
load 133 zero
load 134 zero
load 135 zero
load 136 zero
load 137 zero
load 138 zero
load 139 zero
load 140 zero
load 141 zero
load 142 zero
load 143 zero

load 144 zero
load 145 zero
load 146 zero
load 147 zero
load 148 zero
load 149 zero
load 150 zero
load 151 zero
load 152 zero
load 153 zero
load 154 zero
load 155 zero
load 156 zero
load 157 zero
load 158 zero
load 159 zero

load 160 zero
load 161 zero
load 162 zero
load 163 zero
load 164 zero
load 165 zero
load 166 zero
load 167 zero
load 168 zero
load 169 zero
load 170 zero
load 171 zero
load 172 zero
load 173 zero
load 174 zero
load 175 zero


load 176 zero
load 177 zero
load 178 zero
load 179 zero
load 180 zero
load 181 zero
load 182 zero
load 183 zero
load 184 zero
load 185 zero
load 186 zero
load 187 zero
load 188 zero
load 189 zero
load 190 zero
load 191 zero

# TODO(rwl): Load round keys

#                               key addition
add 0 0 16
add 1 1 17
add 2 2 18
add 3 3 19
add 4 4 20
add 5 5 21
add 6 6 22
add 7 7 23
add 8 8 24
add 9 9 25
add 10 10 26
add 11 11 27
add 12 12 28
add 13 13 29
add 14 14 30
add 15 15 31

#                      round 1

# TODO(rwl): HERE Goes the efficient S-Box



#                        [round 1] local subroutines, block = 0
#                             shift row
mov 0 192
mov 4 196
mov 8 200
mov 12 204
mov 5 193
mov 9 197
mov 13 201
mov 1 205
mov 10 194
mov 14 198
mov 2 202
mov 6 206
mov 15 195
mov 3 199
mov 7 203
mov 11 207
#                        copy
mov 192 0
mov 193 1
mov 194 2
mov 195 3
mov 196 4
mov 197 5
mov 198 6
mov 199 7
mov 200 8
mov 201 9
mov 202 10
mov 203 11
mov 204 12
mov 205 13
mov 206 14
mov 207 15

#                            [mix] mult. col 0
smul 193 0 M_0
smul 192 1 M_4
add 193 193 192
mov 2 192
add 193 193 192
mov 3 192
add 193 193 192
mov 0 194
smul 192 1 M_5
add 194 194 192
smul 192 2 M_9
add 194 194 192
mov 3 192
add 194 194 192
mov 0 195
mov 1 192
add 195 195 192
smul 192 2 M_10
add 195 195 192
smul 192 3 M_14
add 195 195 192
smul 196 0 M_3
mov 1 192
add 196 196 192
mov 2 192
add 196 196 192
smul 192 3 M_15
add 196 196 192
#                            [mix] mult. col 1
smul 197 4 M_0
smul 192 5 M_4
add 197 197 192
mov 6 192
add 197 197 192
mov 7 192
add 197 197 192
mov 4 198
smul 192 5 M_5
add 198 198 192
smul 192 6 M_9
add 198 198 192
mov 7 192
add 198 198 192
mov 4 199
mov 5 192
add 199 199 192
smul 192 6 M_10
add 199 199 192
smul 192 7 M_14
add 199 199 192
smul 200 4 M_3
mov 5 192
add 200 200 192
mov 6 192
add 200 200 192
smul 192 7 M_15
add 200 200 192
#                            [mix] mult. col 2
smul 201 8 M_0
smul 192 9 M_4
add 201 201 192
mov 10 192
add 201 201 192
mov 11 192
add 201 201 192
mov 8 202
smul 192 9 M_5
add 202 202 192
smul 192 10 M_9
add 202 202 192
mov 11 192
add 202 202 192
mov 8 203
mov 9 192
add 203 203 192
smul 192 10 M_10
add 203 203 192
smul 192 11 M_14
add 203 203 192
smul 204 8 M_3
mov 9 192
add 204 204 192
mov 10 192
add 204 204 192
smul 192 11 M_15
add 204 204 192
#                            [mix] mult. col 3
smul 205 12 M_0
smul 192 13 M_4
add 205 205 192
mov 14 192
add 205 205 192
mov 15 192
add 205 205 192
mov 12 206
smul 192 13 M_5
add 206 206 192
smul 192 14 M_9
add 206 206 192
mov 15 192
add 206 206 192
mov 12 207
mov 13 192
add 207 207 192
smul 192 14 M_10
add 207 207 192
smul 192 15 M_14
add 207 207 192
smul 208 12 M_3
mov 13 192
add 208 208 192
mov 14 192
add 208 208 192
smul 192 15 M_15
add 208 208 192
#                        copy
mov 193 0
mov 194 1
mov 195 2
mov 196 3
mov 197 4
mov 198 5
mov 199 6
mov 200 7
mov 201 8
mov 202 9
mov 203 10
mov 204 11
mov 205 12
mov 206 13
mov 207 14
mov 208 15

#                               key addition
add 0 193 32
add 1 1 33
add 2 2 34
add 3 3 35
add 4 4 36
add 5 5 37
add 6 6 38
add 7 7 39
add 8 8 40
add 9 9 41
add 10 10 42
add 11 11 43
add 12 12 44
add 13 13 45
add 14 14 46
add 15 15 47

#                      round 2

# TODO(rwl): Here GOES efficient S-BOX

#                        [round 2] local subroutines, block = 0
#                             shift row
mov 0 192
mov 4 196
mov 8 200
mov 12 204
mov 5 193
mov 9 197
mov 13 201
mov 1 205
mov 10 194
mov 14 198
mov 2 202
mov 6 206
mov 15 195
mov 3 199
mov 7 203
mov 11 207
#                        copy
mov 192 0
mov 193 1
mov 194 2
mov 195 3
mov 196 4
mov 197 5
mov 198 6
mov 199 7
mov 200 8
mov 201 9
mov 202 10
mov 203 11
mov 204 12
mov 205 13
mov 206 14
mov 207 15

#                            [mix] mult. col 0
smul 193 0 M_0
smul 192 1 M_4
add 193 193 192
mov 2 192
add 193 193 192
mov 3 192
add 193 193 192
mov 0 194
smul 192 1 M_5
add 194 194 192
smul 192 2 M_9
add 194 194 192
mov 3 192
add 194 194 192
mov 0 195
mov 1 192
add 195 195 192
smul 192 2 M_10
add 195 195 192
smul 192 3 M_14
add 195 195 192
smul 196 0 M_3
mov 1 192
add 196 196 192
mov 2 192
add 196 196 192
smul 192 3 M_15
add 196 196 192
#                            [mix] mult. col 1
smul 197 4 M_0
smul 192 5 M_4
add 197 197 192
mov 6 192
add 197 197 192
mov 7 192
add 197 197 192
mov 4 198
smul 192 5 M_5
add 198 198 192
smul 192 6 M_9
add 198 198 192
mov 7 192
add 198 198 192
mov 4 199
mov 5 192
add 199 199 192
smul 192 6 M_10
add 199 199 192
smul 192 7 M_14
add 199 199 192
smul 200 4 M_3
mov 5 192
add 200 200 192
mov 6 192
add 200 200 192
smul 192 7 M_15
add 200 200 192
#                            [mix] mult. col 2
smul 201 8 M_0
smul 192 9 M_4
add 201 201 192
mov 10 192
add 201 201 192
mov 11 192
add 201 201 192
mov 8 202
smul 192 9 M_5
add 202 202 192
smul 192 10 M_9
add 202 202 192
mov 11 192
add 202 202 192
mov 8 203
mov 9 192
add 203 203 192
smul 192 10 M_10
add 203 203 192
smul 192 11 M_14
add 203 203 192
smul 204 8 M_3
mov 9 192
add 204 204 192
mov 10 192
add 204 204 192
smul 192 11 M_15
add 204 204 192
#                            [mix] mult. col 3
smul 205 12 M_0
smul 192 13 M_4
add 205 205 192
mov 14 192
add 205 205 192
mov 15 192
add 205 205 192
mov 12 206
smul 192 13 M_5
add 206 206 192
smul 192 14 M_9
add 206 206 192
mov 15 192
add 206 206 192
mov 12 207
mov 13 192
add 207 207 192
smul 192 14 M_10
add 207 207 192
smul 192 15 M_14
add 207 207 192
smul 208 12 M_3
mov 13 192
add 208 208 192
mov 14 192
add 208 208 192
smul 192 15 M_15
add 208 208 192
#                        copy
mov 193 0
mov 194 1
mov 195 2
mov 196 3
mov 197 4
mov 198 5
mov 199 6
mov 200 7
mov 201 8
mov 202 9
mov 203 10
mov 204 11
mov 205 12
mov 206 13
mov 207 14
mov 208 15

#                               key addition
add 0 0 48
add 1 1 49
add 2 2 50
add 3 3 51
add 4 4 52
add 5 5 53
add 6 6 54
add 7 7 55
add 8 8 56
add 9 9 57
add 10 10 58
add 11 11 59
add 12 12 60
add 13 13 61
add 14 14 62
add 15 15 63

#                      round 3

## TODO(rwl): Here goes efficient S-Box

#                        [round 3] local subroutines, block = 0
#                             shift row
mov 0 192
mov 4 196
mov 8 200
mov 12 204
mov 5 193
mov 9 197
mov 13 201
mov 1 205
mov 10 194
mov 14 198
mov 2 202
mov 6 206
mov 15 195
mov 3 199
mov 7 203
mov 11 207
#                        copy
mov 192 0
mov 193 1
mov 194 2
mov 195 3
mov 196 4
mov 197 5
mov 198 6
mov 199 7
mov 200 8
mov 201 9
mov 202 10
mov 203 11
mov 204 12
mov 205 13
mov 206 14
mov 207 15

#                            [mix] mult. col 0
smul 193 0 M_0
smul 192 1 M_4
add 193 193 192
mov 2 192
add 193 193 192
mov 3 192
add 193 193 192
mov 0 194
smul 192 1 M_5
add 194 194 192
smul 192 2 M_9
add 194 194 192
mov 3 192
add 194 194 192
mov 0 195
mov 1 192
add 195 195 192
smul 192 2 M_10
add 195 195 192
smul 192 3 M_14
add 195 195 192
smul 196 0 M_3
mov 1 192
add 196 196 192
mov 2 192
add 196 196 192
smul 192 3 M_15
add 196 196 192
#                            [mix] mult. col 1
smul 197 4 M_0
smul 192 5 M_4
add 197 197 192
mov 6 192
add 197 197 192
mov 7 192
add 197 197 192
mov 4 198
smul 192 5 M_5
add 198 198 192
smul 192 6 M_9
add 198 198 192
mov 7 192
add 198 198 192
mov 4 199
mov 5 192
add 199 199 192
smul 192 6 M_10
add 199 199 192
smul 192 7 M_14
add 199 199 192
smul 200 4 M_3
mov 5 192
add 200 200 192
mov 6 192
add 200 200 192
smul 192 7 M_15
add 200 200 192
#                            [mix] mult. col 2
smul 201 8 M_0
smul 192 9 M_4
add 201 201 192
mov 10 192
add 201 201 192
mov 11 192
add 201 201 192
mov 8 202
smul 192 9 M_5
add 202 202 192
smul 192 10 M_9
add 202 202 192
mov 11 192
add 202 202 192
mov 8 203
mov 9 192
add 203 203 192
smul 192 10 M_10
add 203 203 192
smul 192 11 M_14
add 203 203 192
smul 204 8 M_3
mov 9 192
add 204 204 192
mov 10 192
add 204 204 192
smul 192 11 M_15
add 204 204 192
#                            [mix] mult. col 3
smul 205 12 M_0
smul 192 13 M_4
add 205 205 192
mov 14 192
add 205 205 192
mov 15 192
add 205 205 192
mov 12 206
smul 192 13 M_5
add 206 206 192
smul 192 14 M_9
add 206 206 192
mov 15 192
add 206 206 192
mov 12 207
mov 13 192
add 207 207 192
smul 192 14 M_10
add 207 207 192
smul 192 15 M_14
add 207 207 192
smul 208 12 M_3
mov 13 192
add 208 208 192
mov 14 192
add 208 208 192
smul 192 15 M_15
add 208 208 192
#                        copy
mov 193 0
mov 194 1
mov 195 2
mov 196 3
mov 197 4
mov 198 5
mov 199 6
mov 200 7
mov 201 8
mov 202 9
mov 203 10
mov 204 11
mov 205 12
mov 206 13
mov 207 14
mov 208 15

#                               key addition
add 0 0 64
add 1 1 65
add 2 2 66
add 3 3 67
add 4 4 68
add 5 5 69
add 6 6 70
add 7 7 71
add 8 8 72
add 9 9 73
add 10 10 74
add 11 11 75
add 12 12 76
add 13 13 77
add 14 14 78
add 15 15 79

#                      round 4

## TODO(rwl): Here goes efficient S-Box

#                        [round 4] local subroutines, block = 0
#                             shift row
mov 0 192
mov 4 196
mov 8 200
mov 12 204
mov 5 193
mov 9 197
mov 13 201
mov 1 205
mov 10 194
mov 14 198
mov 2 202
mov 6 206
mov 15 195
mov 3 199
mov 7 203
mov 11 207
#                        copy
mov 192 0
mov 193 1
mov 194 2
mov 195 3
mov 196 4
mov 197 5
mov 198 6
mov 199 7
mov 200 8
mov 201 9
mov 202 10
mov 203 11
mov 204 12
mov 205 13
mov 206 14
mov 207 15

#                            [mix] mult. col 0
smul 193 0 M_0
smul 192 1 M_4
add 193 193 192
mov 2 192
add 193 193 192
mov 3 192
add 193 193 192
mov 0 194
smul 192 1 M_5
add 194 194 192
smul 192 2 M_9
add 194 194 192
mov 3 192
add 194 194 192
mov 0 195
mov 1 192
add 195 195 192
smul 192 2 M_10
add 195 195 192
smul 192 3 M_14
add 195 195 192
smul 196 0 M_3
mov 1 192
add 196 196 192
mov 2 192
add 196 196 192
smul 192 3 M_15
add 196 196 192
#                            [mix] mult. col 1
smul 197 4 M_0
smul 192 5 M_4
add 197 197 192
mov 6 192
add 197 197 192
mov 7 192
add 197 197 192
mov 4 198
smul 192 5 M_5
add 198 198 192
smul 192 6 M_9
add 198 198 192
mov 7 192
add 198 198 192
mov 4 199
mov 5 192
add 199 199 192
smul 192 6 M_10
add 199 199 192
smul 192 7 M_14
add 199 199 192
smul 200 4 M_3
mov 5 192
add 200 200 192
mov 6 192
add 200 200 192
smul 192 7 M_15
add 200 200 192
#                            [mix] mult. col 2
smul 201 8 M_0
smul 192 9 M_4
add 201 201 192
mov 10 192
add 201 201 192
mov 11 192
add 201 201 192
mov 8 202
smul 192 9 M_5
add 202 202 192
smul 192 10 M_9
add 202 202 192
mov 11 192
add 202 202 192
mov 8 203
mov 9 192
add 203 203 192
smul 192 10 M_10
add 203 203 192
smul 192 11 M_14
add 203 203 192
smul 204 8 M_3
mov 9 192
add 204 204 192
mov 10 192
add 204 204 192
smul 192 11 M_15
add 204 204 192
#                            [mix] mult. col 3
smul 205 12 M_0
smul 192 13 M_4
add 205 205 192
mov 14 192
add 205 205 192
mov 15 192
add 205 205 192
mov 12 206
smul 192 13 M_5
add 206 206 192
smul 192 14 M_9
add 206 206 192
mov 15 192
add 206 206 192
mov 12 207
mov 13 192
add 207 207 192
smul 192 14 M_10
add 207 207 192
smul 192 15 M_14
add 207 207 192
smul 208 12 M_3
mov 13 192
add 208 208 192
mov 14 192
add 208 208 192
smul 192 15 M_15
add 208 208 192
#                        copy
mov 193 0
mov 194 1
mov 195 2
mov 196 3
mov 197 4
mov 198 5
mov 199 6
mov 200 7
mov 201 8
mov 202 9
mov 203 10
mov 204 11
mov 205 12
mov 206 13
mov 207 14
mov 208 15

#                               key addition
add 0 0 80
add 1 1 81
add 2 2 82
add 3 3 83
add 4 4 84
add 5 5 85
add 6 6 86
add 7 7 87
add 8 8 88
add 9 9 89
add 10 10 90
add 11 11 91
add 12 12 92
add 13 13 93
add 14 14 94
add 15 15 95

#                      round 5

## TODO(rwl): Here Goes ...

#                        [round 5] local subroutines, block = 0
#                             shift row
mov 0 192
mov 4 196
mov 8 200
mov 12 204
mov 5 193
mov 9 197
mov 13 201
mov 1 205
mov 10 194
mov 14 198
mov 2 202
mov 6 206
mov 15 195
mov 3 199
mov 7 203
mov 11 207
#                        copy
mov 192 0
mov 193 1
mov 194 2
mov 195 3
mov 196 4
mov 197 5
mov 198 6
mov 199 7
mov 200 8
mov 201 9
mov 202 10
mov 203 11
mov 204 12
mov 205 13
mov 206 14
mov 207 15

#                            [mix] mult. col 0
smul 193 0 M_0
smul 192 1 M_4
add 193 193 192
mov 2 192
add 193 193 192
mov 3 192
add 193 193 192
mov 0 194
smul 192 1 M_5
add 194 194 192
smul 192 2 M_9
add 194 194 192
mov 3 192
add 194 194 192
mov 0 195
mov 1 192
add 195 195 192
smul 192 2 M_10
add 195 195 192
smul 192 3 M_14
add 195 195 192
smul 196 0 M_3
mov 1 192
add 196 196 192
mov 2 192
add 196 196 192
smul 192 3 M_15
add 196 196 192
#                            [mix] mult. col 1
smul 197 4 M_0
smul 192 5 M_4
add 197 197 192
mov 6 192
add 197 197 192
mov 7 192
add 197 197 192
mov 4 198
smul 192 5 M_5
add 198 198 192
smul 192 6 M_9
add 198 198 192
mov 7 192
add 198 198 192
mov 4 199
mov 5 192
add 199 199 192
smul 192 6 M_10
add 199 199 192
smul 192 7 M_14
add 199 199 192
smul 200 4 M_3
mov 5 192
add 200 200 192
mov 6 192
add 200 200 192
smul 192 7 M_15
add 200 200 192
#                            [mix] mult. col 2
smul 201 8 M_0
smul 192 9 M_4
add 201 201 192
mov 10 192
add 201 201 192
mov 11 192
add 201 201 192
mov 8 202
smul 192 9 M_5
add 202 202 192
smul 192 10 M_9
add 202 202 192
mov 11 192
add 202 202 192
mov 8 203
mov 9 192
add 203 203 192
smul 192 10 M_10
add 203 203 192
smul 192 11 M_14
add 203 203 192
smul 204 8 M_3
mov 9 192
add 204 204 192
mov 10 192
add 204 204 192
smul 192 11 M_15
add 204 204 192
#                            [mix] mult. col 3
smul 205 12 M_0
smul 192 13 M_4
add 205 205 192
mov 14 192
add 205 205 192
mov 15 192
add 205 205 192
mov 12 206
smul 192 13 M_5
add 206 206 192
smul 192 14 M_9
add 206 206 192
mov 15 192
add 206 206 192
mov 12 207
mov 13 192
add 207 207 192
smul 192 14 M_10
add 207 207 192
smul 192 15 M_14
add 207 207 192
smul 208 12 M_3
mov 13 192
add 208 208 192
mov 14 192
add 208 208 192
smul 192 15 M_15
add 208 208 192
#                        copy
mov 193 0
mov 194 1
mov 195 2
mov 196 3
mov 197 4
mov 198 5
mov 199 6
mov 200 7
mov 201 8
mov 202 9
mov 203 10
mov 204 11
mov 205 12
mov 206 13
mov 207 14
mov 208 15

#                               key addition
add 0 0 96
add 1 1 97
add 2 2 98
add 3 3 99
add 4 4 100
add 5 5 101
add 6 6 102
add 7 7 103
add 8 8 104
add 9 9 105
add 10 10 106
add 11 11 107
add 12 12 108
add 13 13 109
add 14 14 110
add 15 15 111

#                      round 6

## Here goes efficient S-BOX

#                        [round 6] local subroutines, block = 0
#                             shift row
mov 0 192
mov 4 196
mov 8 200
mov 12 204
mov 5 193
mov 9 197
mov 13 201
mov 1 205
mov 10 194
mov 14 198
mov 2 202
mov 6 206
mov 15 195
mov 3 199
mov 7 203
mov 11 207
#                        copy
mov 192 0
mov 193 1
mov 194 2
mov 195 3
mov 196 4
mov 197 5
mov 198 6
mov 199 7
mov 200 8
mov 201 9
mov 202 10
mov 203 11
mov 204 12
mov 205 13
mov 206 14
mov 207 15

#                            [mix] mult. col 0
smul 193 0 M_0
smul 192 1 M_4
add 193 193 192
mov 2 192
add 193 193 192
mov 3 192
add 193 193 192
mov 0 194
smul 192 1 M_5
add 194 194 192
smul 192 2 M_9
add 194 194 192
mov 3 192
add 194 194 192
mov 0 195
mov 1 192
add 195 195 192
smul 192 2 M_10
add 195 195 192
smul 192 3 M_14
add 195 195 192
smul 196 0 M_3
mov 1 192
add 196 196 192
mov 2 192
add 196 196 192
smul 192 3 M_15
add 196 196 192
#                            [mix] mult. col 1
smul 197 4 M_0
smul 192 5 M_4
add 197 197 192
mov 6 192
add 197 197 192
mov 7 192
add 197 197 192
mov 4 198
smul 192 5 M_5
add 198 198 192
smul 192 6 M_9
add 198 198 192
mov 7 192
add 198 198 192
mov 4 199
mov 5 192
add 199 199 192
smul 192 6 M_10
add 199 199 192
smul 192 7 M_14
add 199 199 192
smul 200 4 M_3
mov 5 192
add 200 200 192
mov 6 192
add 200 200 192
smul 192 7 M_15
add 200 200 192
#                            [mix] mult. col 2
smul 201 8 M_0
smul 192 9 M_4
add 201 201 192
mov 10 192
add 201 201 192
mov 11 192
add 201 201 192
mov 8 202
smul 192 9 M_5
add 202 202 192
smul 192 10 M_9
add 202 202 192
mov 11 192
add 202 202 192
mov 8 203
mov 9 192
add 203 203 192
smul 192 10 M_10
add 203 203 192
smul 192 11 M_14
add 203 203 192
smul 204 8 M_3
mov 9 192
add 204 204 192
mov 10 192
add 204 204 192
smul 192 11 M_15
add 204 204 192
#                            [mix] mult. col 3
smul 205 12 M_0
smul 192 13 M_4
add 205 205 192
mov 14 192
add 205 205 192
mov 15 192
add 205 205 192
mov 12 206
smul 192 13 M_5
add 206 206 192
smul 192 14 M_9
add 206 206 192
mov 15 192
add 206 206 192
mov 12 207
mov 13 192
add 207 207 192
smul 192 14 M_10
add 207 207 192
smul 192 15 M_14
add 207 207 192
smul 208 12 M_3
mov 13 192
add 208 208 192
mov 14 192
add 208 208 192
smul 192 15 M_15
add 208 208 192
#                        copy
mov 193 0
mov 194 1
mov 195 2
mov 196 3
mov 197 4
mov 198 5
mov 199 6
mov 200 7
mov 201 8
mov 202 9
mov 203 10
mov 204 11
mov 205 12
mov 206 13
mov 207 14
mov 208 15

#                               key addition
add 0 0 112
add 1 1 113
add 2 2 114
add 3 3 115
add 4 4 116
add 5 5 117
add 6 6 118
add 7 7 119
add 8 8 120
add 9 9 121
add 10 10 122
add 11 11 123
add 12 12 124
add 13 13 125
add 14 14 126
add 15 15 127

#                      round 7

## TODO(rwl): Here goes efficient S-BOX


#                        [round 7] local subroutines, block = 0
#                             shift row
mov 0 192
mov 4 196
mov 8 200
mov 12 204
mov 5 193
mov 9 197
mov 13 201
mov 1 205
mov 10 194
mov 14 198
mov 2 202
mov 6 206
mov 15 195
mov 3 199
mov 7 203
mov 11 207
#                        copy
mov 192 0
mov 193 1
mov 194 2
mov 195 3
mov 196 4
mov 197 5
mov 198 6
mov 199 7
mov 200 8
mov 201 9
mov 202 10
mov 203 11
mov 204 12
mov 205 13
mov 206 14
mov 207 15

#                            [mix] mult. col 0
smul 193 0 M_0
smul 192 1 M_4
add 193 193 192
mov 2 192
add 193 193 192
mov 3 192
add 193 193 192
mov 0 194
smul 192 1 M_5
add 194 194 192
smul 192 2 M_9
add 194 194 192
mov 3 192
add 194 194 192
mov 0 195
mov 1 192
add 195 195 192
smul 192 2 M_10
add 195 195 192
smul 192 3 M_14
add 195 195 192
smul 196 0 M_3
mov 1 192
add 196 196 192
mov 2 192
add 196 196 192
smul 192 3 M_15
add 196 196 192
#                            [mix] mult. col 1
smul 197 4 M_0
smul 192 5 M_4
add 197 197 192
mov 6 192
add 197 197 192
mov 7 192
add 197 197 192
mov 4 198
smul 192 5 M_5
add 198 198 192
smul 192 6 M_9
add 198 198 192
mov 7 192
add 198 198 192
mov 4 199
mov 5 192
add 199 199 192
smul 192 6 M_10
add 199 199 192
smul 192 7 M_14
add 199 199 192
smul 200 4 M_3
mov 5 192
add 200 200 192
mov 6 192
add 200 200 192
smul 192 7 M_15
add 200 200 192
#                            [mix] mult. col 2
smul 201 8 M_0
smul 192 9 M_4
add 201 201 192
mov 10 192
add 201 201 192
mov 11 192
add 201 201 192
mov 8 202
smul 192 9 M_5
add 202 202 192
smul 192 10 M_9
add 202 202 192
mov 11 192
add 202 202 192
mov 8 203
mov 9 192
add 203 203 192
smul 192 10 M_10
add 203 203 192
smul 192 11 M_14
add 203 203 192
smul 204 8 M_3
mov 9 192
add 204 204 192
mov 10 192
add 204 204 192
smul 192 11 M_15
add 204 204 192
#                            [mix] mult. col 3
smul 205 12 M_0
smul 192 13 M_4
add 205 205 192
mov 14 192
add 205 205 192
mov 15 192
add 205 205 192
mov 12 206
smul 192 13 M_5
add 206 206 192
smul 192 14 M_9
add 206 206 192
mov 15 192
add 206 206 192
mov 12 207
mov 13 192
add 207 207 192
smul 192 14 M_10
add 207 207 192
smul 192 15 M_14
add 207 207 192
smul 208 12 M_3
mov 13 192
add 208 208 192
mov 14 192
add 208 208 192
smul 192 15 M_15
add 208 208 192
#                        copy
mov 193 0
mov 194 1
mov 195 2
mov 196 3
mov 197 4
mov 198 5
mov 199 6
mov 200 7
mov 201 8
mov 202 9
mov 203 10
mov 204 11
mov 205 12
mov 206 13
mov 207 14
mov 208 15

#                               key addition
add 0 0 128
add 1 1 129
add 2 2 130
add 3 3 131
add 4 4 132
add 5 5 133
add 6 6 134
add 7 7 135
add 8 8 136
add 9 9 137
add 10 10 138
add 11 11 139
add 12 12 140
add 13 13 141
add 14 14 142
add 15 15 143

#                      round 8

#TODO(rwl): Here goes efficient S-Box

#                        [round 8] local subroutines, block = 0
#                             shift row
mov 0 192
mov 4 196
mov 8 200
mov 12 204
mov 5 193
mov 9 197
mov 13 201
mov 1 205
mov 10 194
mov 14 198
mov 2 202
mov 6 206
mov 15 195
mov 3 199
mov 7 203
mov 11 207
#                        copy
mov 192 0
mov 193 1
mov 194 2
mov 195 3
mov 196 4
mov 197 5
mov 198 6
mov 199 7
mov 200 8
mov 201 9
mov 202 10
mov 203 11
mov 204 12
mov 205 13
mov 206 14
mov 207 15

#                            [mix] mult. col 0
smul 193 0 M_0
smul 192 1 M_4
add 193 193 192
mov 2 192
add 193 193 192
mov 3 192
add 193 193 192
mov 0 194
smul 192 1 M_5
add 194 194 192
smul 192 2 M_9
add 194 194 192
mov 3 192
add 194 194 192
mov 0 195
mov 1 192
add 195 195 192
smul 192 2 M_10
add 195 195 192
smul 192 3 M_14
add 195 195 192
smul 196 0 M_3
mov 1 192
add 196 196 192
mov 2 192
add 196 196 192
smul 192 3 M_15
add 196 196 192
#                            [mix] mult. col 1
smul 197 4 M_0
smul 192 5 M_4
add 197 197 192
mov 6 192
add 197 197 192
mov 7 192
add 197 197 192
mov 4 198
smul 192 5 M_5
add 198 198 192
smul 192 6 M_9
add 198 198 192
mov 7 192
add 198 198 192
mov 4 199
mov 5 192
add 199 199 192
smul 192 6 M_10
add 199 199 192
smul 192 7 M_14
add 199 199 192
smul 200 4 M_3
mov 5 192
add 200 200 192
mov 6 192
add 200 200 192
smul 192 7 M_15
add 200 200 192
#                            [mix] mult. col 2
smul 201 8 M_0
smul 192 9 M_4
add 201 201 192
mov 10 192
add 201 201 192
mov 11 192
add 201 201 192
mov 8 202
smul 192 9 M_5
add 202 202 192
smul 192 10 M_9
add 202 202 192
mov 11 192
add 202 202 192
mov 8 203
mov 9 192
add 203 203 192
smul 192 10 M_10
add 203 203 192
smul 192 11 M_14
add 203 203 192
smul 204 8 M_3
mov 9 192
add 204 204 192
mov 10 192
add 204 204 192
smul 192 11 M_15
add 204 204 192
#                            [mix] mult. col 3
smul 205 12 M_0
smul 192 13 M_4
add 205 205 192
mov 14 192
add 205 205 192
mov 15 192
add 205 205 192
mov 12 206
smul 192 13 M_5
add 206 206 192
smul 192 14 M_9
add 206 206 192
mov 15 192
add 206 206 192
mov 12 207
mov 13 192
add 207 207 192
smul 192 14 M_10
add 207 207 192
smul 192 15 M_14
add 207 207 192
smul 208 12 M_3
mov 13 192
add 208 208 192
mov 14 192
add 208 208 192
smul 192 15 M_15
add 208 208 192
#                        copy
mov 193 0
mov 194 1
mov 195 2
mov 196 3
mov 197 4
mov 198 5
mov 199 6
mov 200 7
mov 201 8
mov 202 9
mov 203 10
mov 204 11
mov 205 12
mov 206 13
mov 207 14
mov 208 15

#                               key addition
add 0 0 144
add 1 1 145
add 2 2 146
add 3 3 147
add 4 4 148
add 5 5 149
add 6 6 150
add 7 7 151
add 8 8 152
add 9 9 153
add 10 10 154
add 11 11 155
add 12 12 156
add 13 13 157
add 14 14 158
add 15 15 159

#                      round 9

## TODO(rwl): Here goes efficient S-Box

#                        [round 9] local subroutines, block = 0
#                             shift row
mov 0 192
mov 4 196
mov 8 200
mov 12 204
mov 5 193
mov 9 197
mov 13 201
mov 1 205
mov 10 194
mov 14 198
mov 2 202
mov 6 206
mov 15 195
mov 3 199
mov 7 203
mov 11 207
#                        copy
mov 192 0
mov 193 1
mov 194 2
mov 195 3
mov 196 4
mov 197 5
mov 198 6
mov 199 7
mov 200 8
mov 201 9
mov 202 10
mov 203 11
mov 204 12
mov 205 13
mov 206 14
mov 207 15

#                            [mix] mult. col 0
smul 193 0 M_0
smul 192 1 M_4
add 193 193 192
mov 2 192
add 193 193 192
mov 3 192
add 193 193 192
mov 0 194
smul 192 1 M_5
add 194 194 192
smul 192 2 M_9
add 194 194 192
mov 3 192
add 194 194 192
mov 0 195
mov 1 192
add 195 195 192
smul 192 2 M_10
add 195 195 192
smul 192 3 M_14
add 195 195 192
smul 196 0 M_3
mov 1 192
add 196 196 192
mov 2 192
add 196 196 192
smul 192 3 M_15
add 196 196 192
#                            [mix] mult. col 1
smul 197 4 M_0
smul 192 5 M_4
add 197 197 192
mov 6 192
add 197 197 192
mov 7 192
add 197 197 192
mov 4 198
smul 192 5 M_5
add 198 198 192
smul 192 6 M_9
add 198 198 192
mov 7 192
add 198 198 192
mov 4 199
mov 5 192
add 199 199 192
smul 192 6 M_10
add 199 199 192
smul 192 7 M_14
add 199 199 192
smul 200 4 M_3
mov 5 192
add 200 200 192
mov 6 192
add 200 200 192
smul 192 7 M_15
add 200 200 192
#                            [mix] mult. col 2
smul 201 8 M_0
smul 192 9 M_4
add 201 201 192
mov 10 192
add 201 201 192
mov 11 192
add 201 201 192
mov 8 202
smul 192 9 M_5
add 202 202 192
smul 192 10 M_9
add 202 202 192
mov 11 192
add 202 202 192
mov 8 203
mov 9 192
add 203 203 192
smul 192 10 M_10
add 203 203 192
smul 192 11 M_14
add 203 203 192
smul 204 8 M_3
mov 9 192
add 204 204 192
mov 10 192
add 204 204 192
smul 192 11 M_15
add 204 204 192
#                            [mix] mult. col 3
smul 205 12 M_0
smul 192 13 M_4
add 205 205 192
mov 14 192
add 205 205 192
mov 15 192
add 205 205 192
mov 12 206
smul 192 13 M_5
add 206 206 192
smul 192 14 M_9
add 206 206 192
mov 15 192
add 206 206 192
mov 12 207
mov 13 192
add 207 207 192
smul 192 14 M_10
add 207 207 192
smul 192 15 M_14
add 207 207 192
smul 208 12 M_3
mov 13 192
add 208 208 192
mov 14 192
add 208 208 192
smul 192 15 M_15
add 208 208 192
#                        copy
mov 193 0
mov 194 1
mov 195 2
mov 196 3
mov 197 4
mov 198 5
mov 199 6
mov 200 7
mov 201 8
mov 202 9
mov 203 10
mov 204 11
mov 205 12
mov 206 13
mov 207 14
mov 208 15

#                               key addition
add 0 0 160
add 1 1 161
add 2 2 162
add 3 3 163
add 4 4 164
add 5 5 165
add 6 6 166
add 7 7 167
add 8 8 168
add 9 9 169
add 10 10 170
add 11 11 171
add 12 12 172
add 13 13 173
add 14 14 174
add 15 15 175

# FINAL S BOX  (Kind of round 10)

## TODO(rwl): Here goes efficient S-BOX

#                             shift row
mov 0 192
mov 4 196
mov 8 200
mov 12 204
mov 5 193
mov 9 197
mov 13 201
mov 1 205
mov 10 194
mov 14 198
mov 2 202
mov 6 206
mov 15 195
mov 3 199
mov 7 203
mov 11 207
#                        copy
mov 192 0
mov 193 1
mov 194 2
mov 195 3
mov 196 4
mov 197 5
mov 198 6
mov 199 7
mov 200 8
mov 201 9
mov 202 10
mov 203 11
mov 204 12
mov 205 13
mov 206 14
mov 207 15

#                               key addition
add 0 0 176
add 1 1 177
add 2 2 178
add 3 3 179
add 4 4 180
add 5 5 181
add 6 6 182
add 7 7 183
add 8 8 184
add 9 9 185
add 10 10 186
add 11 11 187
add 12 12 188
add 13 13 189
add 14 14 190
add 15 15 191

open 0
open 1
open 2
open 3
open 4
open 5
open 6
open 7
open 8
open 9
open 10
open 11
open 12
open 13
open 14
open 15

print 0
print 1
print 2
print 3
print 4
print 5
print 6
print 7
print 8
print 9
print 10
print 11
print 12
print 13
print 14
print 15